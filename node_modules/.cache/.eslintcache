[{"/Users/geoffwaddington/Desktop/Wordlers/src/index.tsx":"1","/Users/geoffwaddington/Desktop/Wordlers/src/reportWebVitals.ts":"2","/Users/geoffwaddington/Desktop/Wordlers/src/App.tsx":"3","/Users/geoffwaddington/Desktop/Wordlers/src/lib/localStorage.ts":"4","/Users/geoffwaddington/Desktop/Wordlers/src/constants/strings.ts":"5","/Users/geoffwaddington/Desktop/Wordlers/src/lib/words.ts":"6","/Users/geoffwaddington/Desktop/Wordlers/src/lib/stats.ts":"7","/Users/geoffwaddington/Desktop/Wordlers/src/components/alerts/Alert.tsx":"8","/Users/geoffwaddington/Desktop/Wordlers/src/components/keyboard/Keyboard.tsx":"9","/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/Grid.tsx":"10","/Users/geoffwaddington/Desktop/Wordlers/src/components/modals/InfoModal.tsx":"11","/Users/geoffwaddington/Desktop/Wordlers/src/components/modals/StatsModal.tsx":"12","/Users/geoffwaddington/Desktop/Wordlers/src/constants/wordlist.ts":"13","/Users/geoffwaddington/Desktop/Wordlers/src/constants/validGuesses.ts":"14","/Users/geoffwaddington/Desktop/Wordlers/src/lib/statuses.ts":"15","/Users/geoffwaddington/Desktop/Wordlers/src/lib/share.ts":"16","/Users/geoffwaddington/Desktop/Wordlers/src/components/modals/BaseModal.tsx":"17","/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/EmptyRow.tsx":"18","/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/CurrentRow.tsx":"19","/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/CompletedRow.tsx":"20","/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/Cell.tsx":"21","/Users/geoffwaddington/Desktop/Wordlers/src/components/keyboard/Key.tsx":"22","/Users/geoffwaddington/Desktop/Wordlers/src/components/stats/Histogram.tsx":"23","/Users/geoffwaddington/Desktop/Wordlers/src/components/stats/StatBar.tsx":"24","/Users/geoffwaddington/Desktop/Wordlers/src/components/stats/Progress.tsx":"25"},{"size":493,"mtime":1643726393000,"results":"26","hashOfConfig":"27"},{"size":416,"mtime":1643726393000,"results":"28","hashOfConfig":"27"},{"size":5753,"mtime":1644242736559,"results":"29","hashOfConfig":"27"},{"size":906,"mtime":1643726393000,"results":"30","hashOfConfig":"27"},{"size":869,"mtime":1644240954236,"results":"31","hashOfConfig":"27"},{"size":823,"mtime":1643726393000,"results":"32","hashOfConfig":"27"},{"size":1189,"mtime":1643726393000,"results":"33","hashOfConfig":"27"},{"size":1083,"mtime":1643726393000,"results":"34","hashOfConfig":"27"},{"size":3405,"mtime":1643726393000,"results":"35","hashOfConfig":"27"},{"size":618,"mtime":1643726393000,"results":"36","hashOfConfig":"27"},{"size":1584,"mtime":1643726393000,"results":"37","hashOfConfig":"27"},{"size":2171,"mtime":1643726393000,"results":"38","hashOfConfig":"27"},{"size":25490,"mtime":1643726393000,"results":"39","hashOfConfig":"27"},{"size":117259,"mtime":1643726393000,"results":"40","hashOfConfig":"27"},{"size":1997,"mtime":1643726393000,"results":"41","hashOfConfig":"27"},{"size":820,"mtime":1643726393000,"results":"42","hashOfConfig":"27"},{"size":2709,"mtime":1643726393000,"results":"43","hashOfConfig":"27"},{"size":250,"mtime":1643726393000,"results":"44","hashOfConfig":"27"},{"size":448,"mtime":1643726393000,"results":"45","hashOfConfig":"27"},{"size":405,"mtime":1643726393000,"results":"46","hashOfConfig":"27"},{"size":914,"mtime":1644243658910,"results":"47","hashOfConfig":"27"},{"size":1249,"mtime":1644243443459,"results":"48","hashOfConfig":"27"},{"size":579,"mtime":1643726393000,"results":"49","hashOfConfig":"27"},{"size":949,"mtime":1643726393000,"results":"50","hashOfConfig":"27"},{"size":534,"mtime":1643726393000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7kcqgr",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/geoffwaddington/Desktop/Wordlers/src/index.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/reportWebVitals.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/App.tsx",["128","129"],[],"import {\n  InformationCircleIcon,\n  ChartBarIcon,\n  SunIcon,\n} from '@heroicons/react/outline'\nimport { useState, useEffect } from 'react'\nimport { Alert } from './components/alerts/Alert'\nimport { Grid } from './components/grid/Grid'\nimport { Keyboard } from './components/keyboard/Keyboard'\nimport { StatsModal } from './components/modals/StatsModal'\nimport {\n  GAME_TITLE,\n  WIN_MESSAGES,\n  GAME_COPIED_MESSAGE,\n  ABOUT_GAME_MESSAGE,\n  NOT_ENOUGH_LETTERS_MESSAGE,\n  WORD_NOT_FOUND_MESSAGE,\n  CORRECT_WORD_MESSAGE,\n} from './constants/strings'\nimport { isWordInWordList, isWinningWord, solution } from './lib/words'\nimport { addStatsForCompletedGame, loadStats } from './lib/stats'\nimport {\n  loadGameStateFromLocalStorage,\n  saveGameStateToLocalStorage,\n} from './lib/localStorage'\n\nimport './App.css'\n\nconst ALERT_TIME_MS = 2000\n\nfunction App() {\n  const prefersDarkMode = window.matchMedia(\n    '(prefers-color-scheme: dark)'\n  ).matches\n\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [isGameWon, setIsGameWon] = useState(false)\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false)\n  const [isNotEnoughLetters, setIsNotEnoughLetters] = useState(false)\n  const [isStatsModalOpen, setIsStatsModalOpen] = useState(false)\n  const [isWordNotFoundAlertOpen, setIsWordNotFoundAlertOpen] = useState(false)\n  const [isGameLost, setIsGameLost] = useState(false)\n  const [isDarkMode, setIsDarkMode] = useState(\n    localStorage.getItem('theme')\n      ? localStorage.getItem('theme') === 'dark'\n      : prefersDarkMode\n      ? true\n      : false\n  )\n  const [successAlert, setSuccessAlert] = useState('')\n  const [guesses, setGuesses] = useState<string[]>(() => {\n    const loaded = loadGameStateFromLocalStorage()\n    if (loaded?.solution !== solution) {\n      return []\n    }\n    const gameWasWon = loaded.guesses.includes(solution)\n    if (gameWasWon) {\n      setIsGameWon(true)\n    }\n    if (loaded.guesses.length === 6 && !gameWasWon) {\n      setIsGameLost(true)\n    }\n    return loaded.guesses\n  })\n\n  const [stats, setStats] = useState(() => loadStats())\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n  }, [isDarkMode])\n\n  const handleDarkMode = (isDark: boolean) => {\n    setIsDarkMode(isDark)\n    localStorage.setItem('theme', isDark ? 'dark' : 'light')\n  }\n\n  useEffect(() => {\n    saveGameStateToLocalStorage({ guesses, solution })\n  }, [guesses])\n\n  useEffect(() => {\n    if (isGameWon) {\n      setSuccessAlert(\n        WIN_MESSAGES[Math.floor(Math.random() * WIN_MESSAGES.length)]\n      )\n      setTimeout(() => {\n        setSuccessAlert('')\n        setIsStatsModalOpen(true)\n      }, ALERT_TIME_MS)\n    }\n    if (isGameLost) {\n      setTimeout(() => {\n        setIsStatsModalOpen(true)\n      }, ALERT_TIME_MS)\n    }\n  }, [isGameWon, isGameLost])\n\n  const onChar = (value: string) => {\n    if (currentGuess.length < 5 && guesses.length < 6 && !isGameWon) {\n      setCurrentGuess(`${currentGuess}${value}`)\n    }\n  }\n\n  const onDelete = () => {\n    setCurrentGuess(currentGuess.slice(0, -1))\n  }\n\n  const onEnter = () => {\n    if (isGameWon || isGameLost) {\n      return\n    }\n    if (!(currentGuess.length === 5)) {\n      setIsNotEnoughLetters(true)\n      return setTimeout(() => {\n        setIsNotEnoughLetters(false)\n      }, ALERT_TIME_MS)\n    }\n\n    if (!isWordInWordList(currentGuess)) {\n      setIsWordNotFoundAlertOpen(true)\n      return setTimeout(() => {\n        setIsWordNotFoundAlertOpen(false)\n      }, ALERT_TIME_MS)\n    }\n\n    const winningWord = isWinningWord(currentGuess)\n\n    if (currentGuess.length === 5 && guesses.length < 6 && !isGameWon) {\n      setGuesses([...guesses, currentGuess])\n      setCurrentGuess('')\n\n      if (winningWord) {\n        setStats(addStatsForCompletedGame(stats, guesses.length))\n        return setIsGameWon(true)\n      }\n\n      if (guesses.length === 5) {\n        setStats(addStatsForCompletedGame(stats, guesses.length + 1))\n        setIsGameLost(true)\n      }\n    }\n  }\n\n  return (\n    <div className=\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\">\n      <div className=\"flex w-80 mx-auto items-center mb-8 mt-12\">\n        <h1 className=\"text-xl grow font-bold dark:text-white\">{GAME_TITLE}</h1>\n        <SunIcon\n          className=\"h-6 w-6 cursor-pointer dark:stroke-white\"\n          onClick={() => handleDarkMode(!isDarkMode)}\n        />\n        <InformationCircleIcon\n          className=\"h-6 w-6 cursor-pointer dark:stroke-white\"\n          onClick={() => setIsInfoModalOpen(true)}\n        />\n        <ChartBarIcon\n          className=\"h-6 w-6 cursor-pointer dark:stroke-white\"\n          onClick={() => setIsStatsModalOpen(true)}\n        />\n      </div>\n      <Grid guesses={guesses} currentGuess={currentGuess} />\n      <Keyboard\n        onChar={onChar}\n        onDelete={onDelete}\n        onEnter={onEnter}\n        guesses={guesses}\n      />\n      <StatsModal\n        isOpen={isStatsModalOpen}\n        handleClose={() => setIsStatsModalOpen(false)}\n        guesses={guesses}\n        gameStats={stats}\n        isGameLost={isGameLost}\n        isGameWon={isGameWon}\n        handleShare={() => {\n          setSuccessAlert(GAME_COPIED_MESSAGE)\n          return setTimeout(() => setSuccessAlert(''), ALERT_TIME_MS)\n        }}\n      />\n\n      <Alert message={NOT_ENOUGH_LETTERS_MESSAGE} isOpen={isNotEnoughLetters} />\n      <Alert\n        message={WORD_NOT_FOUND_MESSAGE}\n        isOpen={isWordNotFoundAlertOpen}\n      />\n      <Alert message={CORRECT_WORD_MESSAGE(solution)} isOpen={isGameLost} />\n      <Alert\n        message={successAlert}\n        isOpen={successAlert !== ''}\n        variant=\"success\"\n      />\n    </div>\n  )\n}\n\nexport default App\n","/Users/geoffwaddington/Desktop/Wordlers/src/lib/localStorage.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/constants/strings.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/lib/words.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/lib/stats.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/alerts/Alert.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/keyboard/Keyboard.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/Grid.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/modals/InfoModal.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/modals/StatsModal.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/constants/wordlist.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/constants/validGuesses.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/lib/statuses.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/lib/share.ts",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/modals/BaseModal.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/EmptyRow.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/CurrentRow.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/CompletedRow.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/grid/Cell.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/keyboard/Key.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/stats/Histogram.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/stats/StatBar.tsx",[],[],"/Users/geoffwaddington/Desktop/Wordlers/src/components/stats/Progress.tsx",[],[],{"ruleId":"130","severity":1,"message":"131","line":15,"column":3,"nodeType":"132","messageId":"133","endLine":15,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":38,"column":10,"nodeType":"132","messageId":"133","endLine":38,"endColumn":25},"@typescript-eslint/no-unused-vars","'ABOUT_GAME_MESSAGE' is defined but never used.","Identifier","unusedVar","'isInfoModalOpen' is assigned a value but never used."]